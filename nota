#!/bin/sh

config="${XDG_CONFIG_HOME:-"$HOME/.config"}/nota"

# shellcheck disable=SC1090
[ -f "$config" ] && . "$config"

data_base_dir=${XDG_DATA_HOME:-"$HOME/.local/share"}
data_dir=$data_base_dir/nota

mkdir -p "$data_dir"
cd -- "$data_dir" || exit

: "${NOTA_READ_ONLY=0}"
: "${GPG=0}"

editor=${EDITOR:-${VISUAL:-vi}}
[ "$GPG" -gt 0 ] && editor=${PGP_EDITOR:-$editor}

if [ "$NOTA_READ_ONLY" -gt 0 ]; then
    editor=cat
    [ "$GPG" -gt 0 ] && editor='gpg -q -d'
fi

unsanitised_basename=${1:-"$(date +%F)"}

export GIT_DIR="$data_dir/.git"
export GIT_WORK_TREE="$data_dir"

case $unsanitised_basename in
    git|ls) exec "$@" ;;
    *' days ago'|yesterday|tomorrow)
        unsanitised_basename=$(date -d "$unsanitised_basename" +%F)
    ;;
esac

# Can't use ${file//...} because it's undefined in POSIX sh
basename=$(printf '%s' "$unsanitised_basename" | tr / _)
file=$data_dir/$basename
[ "$GPG" -gt 0 ] && file=$file.gpg

lock="$file.lock"
trap 'rm -f "$lock"' EXIT

exec 9> "$lock"
if [ "$NOTA_READ_ONLY" -eq 0 ] && ! flock -x -n 9; then
    printf 'Refusing to open %s as it is flocked\n' "$file" >&2
    exit 6
fi

# $editor is intentionally split to allow multiple args via $IFS
$editor -- "$file"

[ "$NOTA_READ_ONLY" -gt 0 ] && exit 0

# It's possible we exited the editor without creating a file in the new case
if ! [ -f "$file" ]; then
    printf 'Not committing as %s is missing\n' "$unsanitised_basename" >&2
    exit 5
fi

git init
git add "$file"
rm -f "$lock"
git commit -m "Updated $unsanitised_basename"
